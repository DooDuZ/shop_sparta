name: Run Test

# develop branch가 push되거나 pull request 하면 테스트 실행
on:
  push:
    branches: [ develop ]
  pull_request:
    branches:
      - develop

jobs:
  docker_test:
    # 운영체제 설정, ubuntu latest보단 서버와 버전을 맞추는 게 좋을듯?
    runs-on: ubuntu-latest

    steps:
      # 해당 브랜치의 코드를 가져온다
      - name: Checkout code
        uses: actions/checkout@v4

      # 고급 빌드를 위한 buildx - 없어도 사용 가능
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # git secret을 환경변수 파일로 복사하기
      - name: Set up environment variables
        run: |
          echo "REQUEST_URL=$REQUEST_URL" >> .env
          echo "SERVER_PORT=$SERVER_PORT" >> .env
          echo "SECRET_KEY=$SECRET_KEY" >> .env
          echo "MAIL_FROM=$MAIL_FROM" >> .env
          echo "MAIL_ID=$MAIL_ID" >> .env
          echo "MAIL_PASSWORD=$MAIL_PASSWORD" >> .env
          echo "MAIL_HOST=$MAIL_HOST" >> .env
          echo "DATASOURCE_USERNAME=$DATASOURCE_USERNAME" >> .env
          echo "DATASOURCE_PASSWORD=$DATASOURCE_PASSWORD" >> .env
          echo "DATASOURCE_URL=$DATASOURCE_URL" >> .env
          echo "REDIS_HOST=$REDIS_HOST" >> .env
          echo "REDIS_PORT=$REDIS_PORT" >> .env
          echo "JWT_ACCESS_SECRET=$JWT_ACCESS_SECRET" >> .env
          echo "JWT_REFRESH_SECRET=$JWT_REFRESH_SECRET" >> .env
          echo "TOKEN_USERNAME_SECRET=$TOKEN_USERNAME_SECRET" >> .env
          echo "S3_BUCKET=$S3_BUCKET" >> .env
          echo "S3_ACCESS_KEY=$S3_ACCESS_KEY" >> .env
          echo "S3_SECRET_KEY=$S3_SECRET_KEY" >> .env
          echo "S3_REGION=$S3_REGION" >> .env

        env:
          REQUEST_URL: ${{ secrets.REQUEST_URL }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          MAIL_ID: ${{ secrets.MAIL_ID }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_HOST: ${{ secrets.MAIL_HOST }}
          DATASOURCE_USERNAME: ${{ secrets.DATASOURCE_USERNAME }}
          DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
          DATASOURCE_URL: ${{ secrets.DATASOURCE_URL }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
          TOKEN_USERNAME_SECRET: ${{ secrets.TOKEN_USERNAME_SECRET }}
          S3_BUCKET: ${{secrets.S3_BUCKET}}
          S3_ACCESS_KEY: ${{secrets.S3_ACCESS_KEY}}
          S3_SECRET_KEY: ${{secrets.S3_SECRET_KEY}}
          S3_REGION: ${{secrets.S3_REGION}}

      # compose-up
      - name: Build and run Docker containers
        run: docker-compose up -d

      # 컨테이너 종료
      - name: Stop and remove containers
        run: docker-compose down
        if: always()